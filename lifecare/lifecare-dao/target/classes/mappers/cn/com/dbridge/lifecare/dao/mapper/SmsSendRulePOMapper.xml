<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.dbridge.lifecare.dao.respository.SmsSendRulePOMapper" >
  <resultMap id="BaseResultMap" type="cn.com.dbridge.lifecare.dao.po.WebSmsSendRulePO" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SEND_FLAG" property="sendFlag" jdbcType="TINYINT" />
    <result column="MINUTES" property="minutes" jdbcType="INTEGER" />
    <result column="POSITION_FLAG" property="positionFlag" jdbcType="TINYINT" />    
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="INTEGER" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_sms_send_rule
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.dbridge.lifecare.dao.po.SmsSendRulePO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_sms_send_rule (SEND_USER, SEND_SERVICE_USE, MINUTES, 
      CREATE_TIME, CREATE_BY, UPDATE_TIME, 
      UPDATE_BY)
    values (#{sendUser,jdbcType=VARCHAR}, #{sendServiceUse,jdbcType=VARCHAR}, #{minutes,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.com.dbridge.lifecare.dao.po.SmsSendRulePO" >
    update t_sms_send_rule
    set SEND_USER = #{sendUser,jdbcType=VARCHAR},
      SEND_SERVICE_USE = #{sendServiceUse,jdbcType=VARCHAR},
      MINUTES = #{minutes,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select ID, SEND_USER, SEND_SERVICE_USE, MINUTES, CREATE_TIME, CREATE_BY, UPDATE_TIME, 
    UPDATE_BY
    from t_sms_send_rule
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select 
        ID, SEND_FLAG, MINUTES, CREATE_TIME, CREATE_BY, UPDATE_TIME, UPDATE_BY
    from 
        t_sms_send_rule
  </select>
  
   <select id="getSmsSendRules" resultMap="BaseResultMap" >
    select 
        SEND_FLAG,
        MINUTES,
        POSITION_FLAG
     from t_sms_send_rule
    order by POSITION_FLAG limit 2
  </select>  
  
  <delete id="deleteAllSmsSendRules" >
    delete from t_sms_send_rule
  </delete>
  
  <insert id="insertSmsSendRule" parameterType="cn.com.dbridge.lifecare.dao.po.WebSmsSendRulePO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_sms_send_rule (
        SEND_FLAG,
        MINUTES,
        POSITION_FLAG,
        CREATE_TIME,
        CREATE_BY,
        UPDATE_TIME,
        UPDATE_BY    
    )
    values (
      #{sendFlag,jdbcType=TINYINT}, 
      #{minutes,jdbcType=INTEGER},
      #{positionFlag,jdbcType=TINYINT},        
      NOW(), 
      #{createBy,jdbcType=INTEGER}, 
      NOW(),  
      #{updateBy,jdbcType=INTEGER} 
      )
  </insert>
  
  
</mapper>